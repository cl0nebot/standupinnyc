# import Post from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post!
  me: User
  comedians(
    where: ComedianWhereInput
    orderBy: ComedianOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Comedian]!
  shows(
    where: ShowWhereInput
    orderBy: ShowOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Show]!
  venues(
    where: VenueWhereInput
    orderBy: VenueOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Venue]!
  comedian(where: ComedianWhereUniqueInput!): Comedian
  show(where: ShowWhereUniqueInput!): Show
  venue(where: VenueWhereUniqueInput!): Venue
  comediansConnection(
    where: ComedianWhereInput
    orderBy: ComedianOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ComedianConnection!
  showsConnection(
    where: ShowWhereInput
    orderBy: ShowOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ShowConnection!
  venuesConnection(
    where: VenueWhereInput
    orderBy: VenueOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): VenueConnection!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  findOrCreateShows(shows: [ShowInput!]!): [Show]!
  createVenue(data: VenueCreateInput!): Venue!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}

input RawComedianInput {
  name: String!
  website: String
  imageUrl: String
  stubsiteId: Int
  ticketmasterId: String
}

input ShowInput {
  name: String!
  description: String
  startTime: DateTime!
  checkoutUrl: String!
  price: Float
  soldOut: Boolean
  stubsiteId: Int
  cellarId: Int
  ticketmasterId: String
  comedians: [RawComedianInput]
  venueId: ID!
}

input BulkAddShows {
  shows: [ShowInput!]!
}
